

R 语言统计分析


R 语言数据挖掘


R 语言绘图


ggplot2 绘图



Python 统计分析


Python 数据挖掘 ---


matplotlib 绘图



Python 数学计算

本章节主要讲解用Python来进行数学计算。python提供了很多标准数学库。




数列

生成一个等差数列
numpy.linspace是用于创建一个一维数组，并且是等差数列构成的一维数组
个参数，第一个参数表示起始点，第二个参数表示终止点，第三个参数表示数列的个数
np.linspace(1,10,10)
linspace创建的数组元素的数据格式，当然是浮点型
dtype('float64')




生成一个等比数列

numpy.linspace用于创建等差数列，现在介绍logspac用于创建等比数列

np.logspace(0,9,10)

np.logspace(0,9,10)

a = np.logspace(0,9,10,base=2)

生成


本章节主要讲解如何计算数学中的排列组合。

---

## 排列组合
排列：从n个不同元素中，任取m(m≤n)个元素，按照一定的顺序排成一列，叫做从n个不同元素中取出m个元素的一个排列。

举例说明：

计算0,1,2 ... ,9的10个数字的全排列。

我们可以使用 scipy.special模块 perm 函数得到组合数，也可以使用 itertools 模块得到所有排列数的结果。
```
import numpy as np
from scipy.special import perm
from itertools import permutations

p = np.arange(0, 10) # 生成一个数列
len(list(permutations(p, 6)))  # 排列与元素的顺序有关
perm(10, 6)
```
组合：从n个不同元素中，任取m(m≤n)个元素并成一组，叫做从 n个不同元素中取出m个元素的一个组合。

举例说明：
双色球 23 选5 总共有多少中组合，从而我们可以计算中奖的比例。我们可以使用 scipy.special模块 comb函数得到组合数，也可以使用 itertools 模块得到所有组合的结果。
```
import numpy as np
from scipy.special import comb
from itertools import combinations

c = np.linspace(1, 23, 23) # 生成一个等差数列
len(list(combinations(c, 5))) # 组合与元素的顺序无关
comb(23, 5)

```

线性代数
矩阵计算

微积分

本章节我们主要讲解如何使用科学计算库来计算极限、微分、积分。
下面我们使用数学符号科学计算库 Sympy 计算高等数学中的例题。

---
## 计算极限

在SymPy中计算极限的语法为：
```
limit(function, variable, point)
```
如果要计算函数f(x)，当$$x \rightarrow 0$$时的极限, 你应该使用limit(f, x, 0)。

```

```
趋于无穷大时的极限
```

```
## 计算导数

```

```

## 计算微分

在SymPy中计算微分的语法为：
```
diff(func, var)
```
使用 diff(func, var, n) 方法来计算更高的导数
```

```
## 计算不定积分

```

```
## 计算定积分

```

```







概率




