

我们看一下import/export工具的基本选项及其含义，如下表所示：

### import和export工具通用选项参数详解：

|选项|说明|
|-|-|
|--connect < jdbc-uri >|指定JDBC连接字符串|
|--connection-manager < class-name >|指定要使用的连接管理器类|
|--driver < class-name >|指定要使用的JDBC驱动类|
|--hadoop-mapred-home < dir >|指定$HADOOP_MAPRED_HOME路径|
|--help|打印用法帮助信息|
|--password-file|设置用于存放认证的密码信息文件的路径|
|-P|从控制台读取输入的密码|
|--password < password >|设置认证密码|
|--username < username >|设置认证用户名|
|--verbose|打印详细的运行信息|
|--connection-param-file < filename >|可选，指定存储数据库连接参数的属性文件|

### import 工具参数详解：

|选项|说明|
|-|-|
|--append|将数据追加到HDFS上一个已存在的数据集上|
|--as-avrodatafile|将数据导入到Avro数据文件|
|--as-sequencefile|将数据导入到SequenceFil|
|--as-textfile|将数据导入到普通文本文件（默认）|
|--boundary-query < statement >|边界查询，用于创建分片（InputSplit）|
|--columns < col,col,col…>|从表中导出指定的一组列的数据,用逗号分隔|
|--delete-target-dir|如果指定目录存在，则先删除掉|
|--direct|使用直接导入模式（优化导入速度）|
|--direct-split-size < n >|分割输入stream的字节大小（在直接导入模式下）|
|--fetch-size < n >|从数据库中批量读取记录数|
|--inline-lob-limit < n >|设置内联的LOB对象的大小|
|-m,--num-mappers < n >|使用n个map任务并行导入数据|
|-e,--query < statement >|导入的查询语句|
|--split-by < column-name >|指定按照哪个列去分割数据|
|--table < table-name >|导入的源表表名|
|--target-dir < dir >|导入HDFS的目标路径|
|--warehouse-dir < dir >|HDFS存放表的根路径|
|--where < where clause>|指定导出时所使用的查询条件|
|-z,--compress|启用压缩|
|--compression-codec < c >|指定Hadoop的codec方式（默认gzip）|
|--null-string < null-string >|如果指定列为字符串类型，使用指定字符串替换值为null的该类列的值|
|--null-non-string < null-string >|如果指定列为非字符串类型，使用指定字符串替换值为null的该类列的值|


**hive参数**

|选项|说明|
|-|-|
|--hive-home < dir >|Override $HIVE_HOME|
|--hive-import|插入数据到hive当中，使用hive的默认分隔符|
|--hive-overwrite|覆盖hive表中的数据|
|--create-hive-table|建表，如果表已经存在，该操作会报错|
|--hive-table < table-name >|设置到hive当中的表名|
|--hive-drop-import-delims|导入到hive时删除 \n, \r, and \01|
|--hive-delims-replacement|导入到hive时用自定义的字符替换掉\n, \r, and \01|
|--hive-partition-key|hive分区的key|
|--hive-partition-value < v >|hive分区的值|
|--map-column-hive < map >|类型匹配，sql类型对应到hive类型|

**HBase参数**

|选项|说明|
|-|-|
|--column-family < family >|把内容导入到hbase当中，默认是用主键作为split列|
|--hbase-create-table|创建Hbase表|
|--hbase-row-key < col >|指定字段作为row key ，如果输入表包含复合主键，用逗号分隔|
|--hbase-table < table-name >|指定hbase表|


### export 工具参数详解

|选项|说明|
|-|-|
|--validate < class-name >|启用数据副本验证功能，仅支持单表拷贝，可以指定验证使用的实现类|
|--validation-threshold < class-name >|指定验证门限所使用的类表|
|--direct|使用直接导出模式（优化速度）|
|--export-dir < dir >|导出过程中HDFS源路径|
|-m,--num-mappers < n >|使用n个map任务并行导出|
|--table < table-name >|导出的目的表名称|
|--call < stored-proc-name >|导出数据调用的指定存储过程名|
|--update-key col-name >|更新参考的列名称，多个列名使用逗号分隔|
|--update-mode < mode >|指定更新策略，包括：updateonly（默认）、allowinsert|
|--input-null-string < null-string >|使用指定字符串，替换字符串类型值为null的列|
|--input-null-non-string < null-string >|使用指定字符串，替换非字符串类型值为null的列|
|--staging-table < staging-table-name>|在数据导出到数据库之前，数据临时存放的表名称|
|--clear-staging-table|清除工作区中临时存放的数据|
|--batch|使用批量模式导出|