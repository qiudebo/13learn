### MySQL 排序
我们知道从 MySQL 表中使用 SQL SELECT 语句来读取数据。
如果我们需要对读取的数据进行排序，我们就可以使用 MySQL 的 **ORDER BY** 子句来设定你想按哪个字段哪种方式来进行排序，再返回搜索结果。
### 语法
以下是 SQL SELECT 语句使用 ORDER BY 子句将查询数据排序后再返回数据：
```other
SELECT field1, field2,...fieldN table_name1, table_name2...
ORDER BY field1, [field2...] [ASC [DESC]]
```
*  你可以使用任何字段来作为排序的条件，从而返回排序后的查询结果。
*  你可以设定多个字段来排序。
*  你可以使用 ASC 或 DESC 关键字来设置查询结果是按升序或降序排列。 默认情况下，它是按升序排列。
*  你可以添加 WHERE...LIKE 子句来设置条件。

---

### 在命令提示符中使用 ORDER BY 子句
以下将在 SQL SELECT 语句中使用 ORDER BY 子句来读取MySQL 数据表 13learn_tbl 中的数据：
### 实例
尝试以下实例，结果将按升序及降序排列。
SQL 排序
```other
mysql> use 13LEARN;
Database changed
mysql> SELECT * from 13learn_tbl ORDER BY submission_date ASC;
+-----------+---------------+---------------+-----------------+
| 13learn_id | 13learn_title  | 13learn_author | submission_date |
+-----------+---------------+---------------+-----------------+
| 3         | 学习 Java   | 13LEARN.COM    | 2015-05-01      |
| 4         | 学习 Python | 13LEARN.COM    | 2016-03-06      |
| 1         | 学习 PHP    | 13LEARN教程  | 2017-04-12      |
| 2         | 学习 MySQL  | 13LEARN教程  | 2017-04-12      |
+-----------+---------------+---------------+-----------------+
4 rows in set (0.01 sec)
 
mysql> SELECT * from 13learn_tbl ORDER BY submission_date DESC;
+-----------+---------------+---------------+-----------------+
| 13learn_id | 13learn_title  | 13learn_author | submission_date |
+-----------+---------------+---------------+-----------------+
| 1         | 学习 PHP    | 13LEARN教程  | 2017-04-12      |
| 2         | 学习 MySQL  | 13LEARN教程  | 2017-04-12      |
| 4         | 学习 Python | 13LEARN.COM    | 2016-03-06      |
| 3         | 学习 Java   | 13LEARN.COM    | 2015-05-01      |
+-----------+---------------+---------------+-----------------+
4 rows in set (0.01 sec)
```
读取 13learn_tbl 表中所有数据并按 submission_date 字段的升序排列。

---

### 在 PHP 脚本中使用 ORDER BY 子句
你可以使用PHP函数的 mysqli_query() 及相同的 SQL SELECT 带上 ORDER BY 子句的命令来获取数据。
该函数用于执行 SQL 命令，然后通过 PHP 函数 mysqli_fetch_array() 来输出所有查询的数据。
### 实例
尝试以下实例，查询后的数据按 submission_date 字段的降序排列后返回。
MySQL ORDER BY 测试：
```other
<?php
$dbhost = 'localhost:3306';  // mysql服务器主机地址
$dbuser = 'root';            // mysql用户名
$dbpass = '123456';          // mysql用户名密码
$conn = mysqli_connect($dbhost, $dbuser, $dbpass);
if(! $conn )
{
    die('连接失败: ' . mysqli_error($conn));
}
// 设置编码，防止中文乱码
mysqli_query($conn , "set names utf8");
 
$sql = 'SELECT 13learn_id, 13learn_title, 
        13learn_author, submission_date
        FROM 13learn_tbl
        ORDER BY  submission_date ASC';
 
mysqli_select_db( $conn, '13LEARN' );
$retval = mysqli_query( $conn, $sql );
if(! $retval )
{
    die('无法读取数据: ' . mysqli_error($conn));
}
echo '<h2>13LEARN教程 MySQL ORDER BY 测试<h2>';
echo '<table border="1"><tr><td>教程 ID</td><td>标题</td><td>作者</td><td>提交日期</td></tr>';
while($row = mysqli_fetch_array($retval, MYSQL_ASSOC))
{
    echo "<tr><td> {$row['13learn_id']}</td> ".
         "<td>{$row['13learn_title']} </td> ".
         "<td>{$row['13learn_author']} </td> ".
         "<td>{$row['submission_date']} </td> ".
         "</tr>";
}
echo '</table>';
mysqli_close($conn);
?>
```
