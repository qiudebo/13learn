### MySQL LIKE 子句

我们知道在 MySQL 中使用 SQL SELECT 命令来读取数据， 同时我们可以在 SELECT 语句中使用 WHERE 子句来获取指定的记录。  
WHERE 子句中可以使用等号 = 来设定获取数据的条件，如 "13learn_author = '13LEARN.COM'"。  
但是有时候我们需要获取 13learn_author 字段含有 "COM" 字符的所有记录，这时我们就需要在 WHERE 子句中使用 SQL LIKE 子句。  
SQL LIKE 子句中使用百分号 %字符来表示任意字符，类似于UNIX或正则表达式中的星号 *。
如果没有使用百分号 %, LIKE 子句与等号 = 的效果是一样的。

### 语法
以下是 SQL SELECT 语句使用 LIKE 子句从数据表中读取数据的通用语法：
```other
SELECT field1, field2,...fieldN 
FROM table_name
WHERE field1 LIKE condition1 [AND [OR]] filed2 = 'somevalue'
```

*  你可以在 WHERE 子句中指定任何条件。
*  你可以在 WHERE 子句中使用LIKE子句。
*  你可以使用LIKE子句代替等号 =。
*  LIKE 通常与 % 一同使用，类似于一个元字符的搜索。
*  你可以使用 AND 或者 OR 指定一个或多个条件。
*  你可以在 DELETE 或 UPDATE 命令中使用 WHERE...LIKE 子句来指定条件。

### 在命令提示符中使用 LIKE 子句
以下我们将在 SQL SELECT 命令中使用 WHERE...LIKE 子句来从MySQL数据表 13learn_tbl 中读取数据。
### 实例
以下是我们将 13learn_tbl 表中获取 13learn_author 字段中以 COM 为结尾的的所有记录：
SQL UPDATE 语句：
```other
mysql> use 13LEARN;
Database changed
mysql> SELECT * from 13learn_tbl  WHERE 13learn_author LIKE '%COM';
+-----------+---------------+---------------+-----------------+
| 13learn_id | 13learn_title  | 13learn_author | submission_date |
+-----------+---------------+---------------+-----------------+
| 3         | 学习 Java   | 13LEARN.COM    | 2015-05-01      |
| 4         | 学习 Python | 13LEARN.COM    | 2016-03-06      |
+-----------+---------------+---------------+-----------------+
2 rows in set (0.01 sec)
```

---

### 在PHP脚本中使用 LIKE 子句
你可以使用PHP函数的 mysqli_query() 及相同的 SQL SELECT 带上 WHERE...LIKE 子句的命令来获取数据。  
该函数用于执行 SQL 命令，然后通过 PHP 函数 mysqli_fetch_assoc() 来输出所有查询的数据。  
但是如果是 DELETE 或者 UPDATE 中使用 WHERE...LIKE 子句的S QL 语句，则无需使用 mysqli_fetch_array() 函数。  
### 实例
以下是我们使用PHP脚本在 13learn_tbl 表中读取 13learn_author 字段中以 COM 为结尾的的所有记录：
MySQL DELETE 子句测试：
```other
<?php
$dbhost = 'localhost:3306';  // mysql服务器主机地址
$dbuser = 'root';            // mysql用户名
$dbpass = '123456';          // mysql用户名密码
$conn = mysqli_connect($dbhost, $dbuser, $dbpass);
if(! $conn )
{
    die('连接失败: ' . mysqli_error($conn));
}
// 设置编码，防止中文乱码
mysqli_query($conn , "set names utf8");
 
$sql = 'SELECT 13learn_id, 13learn_title, 
        13learn_author, submission_date
        FROM 13learn_tbl
        WHERE 13learn_author LIKE "%COM"';
 
mysqli_select_db( $conn, '13LEARN' );
$retval = mysqli_query( $conn, $sql );
if(! $retval )
{
    die('无法读取数据: ' . mysqli_error($conn));
}
echo '<h2>13LEARN教程 mysqli_fetch_array 测试<h2>';
echo '<table border="1"><tr><td>教程 ID</td><td>标题</td><td>作者</td><td>提交日期</td></tr>';
while($row = mysqli_fetch_array($retval, MYSQL_ASSOC))
{
    echo "<tr><td> {$row['13learn_id']}</td> ".
         "<td>{$row['13learn_title']} </td> ".
         "<td>{$row['13learn_author']} </td> ".
         "<td>{$row['submission_date']} </td> ".
         "</tr>";
}
echo '</table>';
mysqli_close($conn);
?>
```