
### 引用

在我们写作的时候经常需要引用他人的文字，这个时候引用这个格式就很有必要了

**语法说明：**

在 Markdown 中，你只需要在你希望引用的文字前面加上 > 就好了.

**代码：**
```other
>这是一个有两段文字的引用,  
>无意义的占行文字1.  
>无意义的占行文字2.  
>
>无意义的占行文字3.  
>无意义的占行文字4.  
```
**显示效果**

>这是一个有两段文字的引用,  
>无意义的占行文字1.  
>无意义的占行文字2.  
>
>无意义的占行文字3.  
>无意义的占行文字4.  

**注：** > 和文本之间要保留一个字符的空格。

Markdown 也允许只在整个段落的第一行最前面加上 > ：

**代码：**
```other
> 这是一个有两段文字的引用,  
无意义的占行文字1.  
无意义的占行文字2.  

> 无意义的占行文字3.  
无意义的占行文字4.
```
显示效果

> 这是一个有两段文字的引用,  
无意义的占行文字1.  
无意义的占行文字2.  

> 无意义的占行文字3.  
无意义的占行文字4.

### 引用的多层嵌套

区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 > ：

**代码：**
```other
>>> 请问 Markdwon 怎么用？ - 小白  

>> 自己看教程！ - 愤青  

> 教程在哪？ - 小白  
```

>>> 请问 Markdwon 怎么用？ - 小白  

>> 自己看教程！ - 愤青  

> 教程在哪？ - 小白  


### 引用其它要素

引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：

**代码：**
```other
> 1.   这是第一行列表项。  
> 2.   这是第二行列表项。  
> 
> 给出一些例子代码：  
> 
>        return shell_exec("echo $input | $markdown_script");
```
**显示效果：**

> 1.   这是第一行列表项。  
> 2.   这是第二行列表项。  
> 
> 给出一些例子代码：  
> 
>        return shell_exec("echo $input | $markdown_script");

