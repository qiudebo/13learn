## 粗体和斜体

```other
*斜体*
_斜体_
**粗体**
***加粗斜体***
~~删除线~~
```

显示效果

*  *斜体*
*  _斜体_
*  **粗体**
*  ***加粗斜体***
*  ~~删除线~~

## 分级标题

第一种写法

```other
这是一个一级标题
============================
这是一个二级标题
--------------------------------------------------

```
显示效果

这是一个一级标题
============================
这是一个二级标题
--------------------------------------------------


第二种写法

```other
# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
```
显示效果

# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题

## 超链接
Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。

### 行内式

**语法说明：**

*  []里写链接文字，()里写链接地址, ()中的""中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。链接地址与链接标题前有一个空格。

```other
欢迎来到[13learn](http://www.13learn.com)
欢迎来到[13learn](http://www.13learn.com "13learn")
```

欢迎来到[13learn](http://www.13learn.com)

欢迎来到[13learn](http://www.13learn.com "13learn")

### 参考式

参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。

**语法说明：** 
参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。

如果链接文字本身可以做为链接标记，你也可以写成[链接文字][] 
[链接文字]：链接地址的形式，见代码的最后一行。

代码：
```other
我经常去的几个网站[Google][1]、[13learn][2]以及[markdown教程][3]
[13learn 数据科学][2]是一个不错的[网站][]。
[1]:http://www.google.com "Google"
[2]:http://www.13learn.com "13learn"
[3]:http://http://blog.13learn.com/markdown "13learn"
[网站]:http://http://blog.13learn.com/markdown
```

我经常去的几个网站[Google][1]、[13learn][2]以及[markdown教程][3]

[13learn 数据科学][2]是一个不错的[网站][]。

[1]:http://www.google.com "Google"
[2]:http://www.13learn.com "13learn"
[3]:http://http://blog.13learn.com/markdown "13learn"
[网站]:http://http://blog.13learn.com/markdown


### 自动链接

### 语法说明： 
Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用<>包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：

代码：
```other
<http://example.com/>
<address@example.com>
```
显示效果：

<http://example.com/>

<address@example.com>


## 锚点
网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。

注意： 
1. Markdown Extra 只支持在标题后插入锚点，其它地方无效。 

**语法描述：**
在你准备跳转到的指定标题后插入锚点{#标记}，然后在文档的其它地方写上连接到锚点的链接。
**代码：**
```other
## 0. 目录{#index}
跳转到[目录](#index)
```
## 0. 目录{#index}

跳转到[目录](#index)



## 列表
### 无序列表

使用 *，+，- 表示无序列表。

**代码：**
```other
- 无序列表项 一
- 无序列表项 二
- 无序列表项 三
```
**显示效果：**

- 无序列表项 一
- 无序列表项 二
- 无序列表项 三

### 有序列表

有序列表则使用数字接着一个英文句点。

**代码：**
```other
1. 有序列表项 一
2. 有序列表项 二
3. 有序列表项 三
```

显示效果：

1. 有序列表项 一
2. 有序列表项 二
3. 有序列表项 三


### 列表缩进

**语法说明：**

列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。
```other
*  假如生活欺骗了你，
*  不要悲伤，不要心急！
*  忧郁的日子里须要镇静：
*  相信吧，快乐的日子将会来临！
*  心儿永远向往着未来；
*  现在却常是忧郁。
*  一切都是瞬息，一切都将会过去；
*  而那过去了的，就会成为亲切的怀恋。
```
**显示效果

*  假如生活欺骗了你，
*  不要悲伤，不要心急！
*  忧郁的日子里须要镇静：
*  相信吧，快乐的日子将会来临！
*  心儿永远向往着未来；
*  现在却常是忧郁。
*  一切都是瞬息，一切都将会过去；
*  而那过去了的，就会成为亲切的怀恋。


### 包含引用的列表

**语法说明：**

如果要在列表项目内放进引用，那 > 就需要缩进：

```other
*   工作习惯:
    > 时间管理。
    > 沟通技巧。
```

*   工作习惯:

    > 时间管理。  
    > 沟通技巧。


### 包含代码区块的引用

**语法说明： **
如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：
    
    <代码写在这>

### 一个特殊情况

在特殊情况下，项目列表很可能会不小心产生，像是下面这样的写法：

```other
1986. What a great season.
```

会显示成：

1986. What a great season.

换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠：
```other
1986\. What a great season.
```
会显示成：

1986\. What a great season.


### 引用

**语法说明：**

引用需要在被引用的文本前加上>符号。

**代码：**
```other
>这是一个有两段文字的引用,  
>无意义的占行文字1.  
>无意义的占行文字2.  
>
>无意义的占行文字3.  
>无意义的占行文字4.  
```
**显示效果**

>这是一个有两段文字的引用,  
>无意义的占行文字1.  
>无意义的占行文字2.  
>
>无意义的占行文字3.  
>无意义的占行文字4.  

Markdown 也允许只在整个段落的第一行最前面加上 > ：

**代码：**
```other
> 这是一个有两段文字的引用,  
无意义的占行文字1.  
无意义的占行文字2.  

> 无意义的占行文字3.  
无意义的占行文字4.
```
显示效果

> 这是一个有两段文字的引用,  
无意义的占行文字1.  
无意义的占行文字2.  

> 无意义的占行文字3.  
无意义的占行文字4.

### 引用的多层嵌套

区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 > ：

**代码：**
```other
>>> 请问 Markdwon 怎么用？ - 小白  

>> 自己看教程！ - 愤青  

> 教程在哪？ - 小白  
```

>>> 请问 Markdwon 怎么用？ - 小白  

>> 自己看教程！ - 愤青  

> 教程在哪？ - 小白  


### 引用其它要素

引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：

**代码：**
```other
> 1.   这是第一行列表项。  
> 2.   这是第二行列表项。  
> 
> 给出一些例子代码：  
> 
>        return shell_exec("echo $input | $markdown_script");
```
**显示效果：**

> 1.   这是第一行列表项。  
> 2.   这是第二行列表项。  
> 
> 给出一些例子代码：  
> 
>        return shell_exec("echo $input | $markdown_script");


### 插入图像

图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。

语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。

行内式

**语法说明：**  \![图片Alt\]\(图片地址 “图片Title”\)

**代码：**

**显示效果：**
